
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if the requesting user belongs to the given organizationId
    function isUserOrgMember(orgId) {
      return request.auth.uid != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.organizationId == orgId;
    }

    // Users can read and update their own profile.
    // Users can create their own profile document (during signup).
    match /users/{userId} {
      allow read, update: if request.auth.uid == userId;
      allow create: if request.auth.uid == userId; // Ensures user can only create their own doc
    }

    // Users can read their own organization's details.
    // Authenticated users can create organizations (primarily for the signup flow).
    match /organizations/{orgId} {
      allow read: if request.auth.uid != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.organizationId == orgId;
      allow create: if request.auth.uid != null; // Allows any authenticated user to create an org.
    }

    // Rules for Ubicaciones
    // Users can manage (read, write, delete, create) ubicaciones within their own organization.
    match /ubicaciones/{ubicacionId} {
      allow read, update, delete: if isUserOrgMember(resource.data.organizationId);
      allow create: if isUserOrgMember(request.resource.data.organizationId);
    }

    // Rules for Equipos
    // Users can manage equipos within their own organization.
    match /equipos/{equipoId} {
      allow read, update, delete: if isUserOrgMember(resource.data.organizationId);
      allow create: if isUserOrgMember(request.resource.data.organizationId);
    }

    // Rules for Puertos
    // Users can manage puertos within their own organization.
    match /puertos/{puertoId} {
      allow read, update, delete: if isUserOrgMember(resource.data.organizationId);
      allow create: if isUserOrgMember(request.resource.data.organizationId);
    }

    // Rules for Nodos
    // Users can manage nodos within their own organization.
    match /nodos/{nodoId} {
      allow read, update, delete: if isUserOrgMember(resource.data.organizationId);
      allow create: if isUserOrgMember(request.resource.data.organizationId);
    }

    // Rules for RFID Censos
    // Users can manage rfid_censos within their own organization.
    match /rfid_censos/{censoId} {
      allow read, update, delete: if isUserOrgMember(resource.data.organizationId);
      allow create: if isUserOrgMember(request.resource.data.organizationId);
    }
  }
}
